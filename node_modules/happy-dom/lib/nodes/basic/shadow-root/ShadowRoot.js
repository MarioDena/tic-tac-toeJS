"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var DocumentFragment_1 = __importDefault(require("../document-fragment/DocumentFragment"));
var HTMLParser_1 = __importDefault(require("../../../html-parser/HTMLParser"));
var HTMLRenderer_1 = __importDefault(require("../../../html-renderer/HTMLRenderer"));
/**
 * ShadowRoot.
 */
var ShadowRoot = /** @class */ (function (_super) {
    __extends(ShadowRoot, _super);
    function ShadowRoot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.mode = 'open';
        _this._renderer = null;
        return _this;
    }
    Object.defineProperty(ShadowRoot.prototype, "innerHTML", {
        /**
         * Returns inner HTML.
         *
         * @return HTML.
         */
        get: function () {
            return HTMLRenderer_1.default.getInnerHTML(this);
        },
        /**
         * Sets inner HTML.
         *
         * @param html HTML.
         * @return HTML.
         */
        set: function (html) {
            var root = HTMLParser_1.default.parse(this.ownerDocument, html);
            var childNodes = root.childNodes.length ? root.childNodes : [this.ownerDocument.createTextNode(html)];
            for (var _i = 0, _a = childNodes.slice(); _i < _a.length; _i++) {
                var child = _a[_i];
                this.appendChild(child);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts to string.
     *
     * @return String.
     */
    ShadowRoot.prototype.toString = function () {
        return this.innerHTML;
    };
    return ShadowRoot;
}(DocumentFragment_1.default));
exports.default = ShadowRoot;
//# sourceMappingURL=ShadowRoot.js.map