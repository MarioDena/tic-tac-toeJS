"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Element_1 = __importDefault(require("../element/Element"));
var Event_1 = __importDefault(require("../../../event/Event"));
/**
 * HTMLElement.
 */
var HTMLElement = /** @class */ (function (_super) {
    __extends(HTMLElement, _super);
    function HTMLElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.style = {};
        _this.tabIndex = -1;
        _this.offsetHeight = 0;
        _this.offsetWidth = 0;
        _this.offsetLeft = 0;
        _this.offsetTop = 0;
        _this.clientHeight = 0;
        _this.clientWidth = 0;
        return _this;
    }
    Object.defineProperty(HTMLElement.prototype, "innerText", {
        /**
         * Returns inner text.
         *
         * @return Text.
         */
        get: function () {
            return this.textContent;
        },
        /**
         * Sets inner text.
         *
         * @param text Text.
         */
        set: function (text) {
            this.textContent = text;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Triggers a click event.
     */
    HTMLElement.prototype.click = function () {
        var event = new Event_1.default('click', {
            bubbles: true,
            composed: true
        });
        event.target = this;
        event.currentTarget = this;
        this.dispatchEvent(event);
    };
    /**
     * Triggers a blur event.
     */
    HTMLElement.prototype.blur = function () {
        var event = new Event_1.default('blur', {
            bubbles: true,
            composed: true
        });
        event.target = this;
        event.currentTarget = this;
        this.dispatchEvent(event);
    };
    /**
     * Triggers a focus event.
     */
    HTMLElement.prototype.focus = function () {
        var event = new Event_1.default('focus', {
            bubbles: true,
            composed: true
        });
        event.target = this;
        event.currentTarget = this;
        this.dispatchEvent(event);
    };
    return HTMLElement;
}(Element_1.default));
exports.default = HTMLElement;
//# sourceMappingURL=HTMLElement.js.map