/**
 * CSS Cache.
 */
export default class ScopedCSSCache {
    private original;
    private scoped;
    /**
     * Returns the scoped CSS.
     *
     * @return Scoped style.
     */
    getAllScoped(): string[];
    /**
     * Returns scoped CSS.
     *
     * @param original Original CSS.
     * @return Cached scoped CSS.
     */
    getScoped(original: string): string;
    /**
     * Returns scoped CSS.
     *
     * @param original Original CSS.
     * @param scopedCSS Scoped CSS.
     */
    setScoped(original: string, scopedCSS: string): void;
    /**
     * Removes a cache entry.
     *
     * @param original Original CSS.
     */
    removeScoped(original: string): void;
    /**
     * Returns scope ID.
     *
     * @param original Original CSS.
     * @return string Scope ID.
     */
    getScopeID(original: string): string;
    /**
     * Clears cache.
     */
    clear(): void;
    /**
     * Returns an unique ID.
     *
     * @param index Index.
     * @return ID.
     */
    private getIdByIndex;
}
