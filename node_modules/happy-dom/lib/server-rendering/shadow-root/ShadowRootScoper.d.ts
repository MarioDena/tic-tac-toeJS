import Element from '../../nodes/basic/element/Element';
import IShadowRootRenderOptions from './IShadowRootRenderOptions';
/**
 * Scopes elements and CSS inside shadow roots.
 */
export default class ShadowRootScoper {
    private renderOptions;
    private scopedCSSCache;
    /**
     * Renders an element as HTML.
     *
     * @param renderOptions Render this.renderOptions.
     */
    constructor(renderOptions: IShadowRootRenderOptions);
    /**
     * Clones an element and scopes it.
     *
     * @param element Element to render.
     * @param cssCache Options object.
     * @param options Render options.
     * @returns Element clone.
     */
    getScopedClone(element: Element): Element;
    /**
     * Returns scoped CSS.
     *
     * @returns CSS strings.
     */
    getScopedCSS(): string[];
    /**
     * Moves child nodes into shadow root slot elements.
     *
     * @param element Element.
     */
    private moveChildNodesIntoSlots;
    /**
     * Extracts CSS.
     *
     * @param element Element.
     */
    private extractAndScopeCSS;
    /**
     * Extracts CSS.
     *
     * @param shadowRoot Shadow root.
     * @return CSS.
     */
    private extractCSS;
    /**
     * Scopes an element by adding a unique id as a class to it and its children.
     *
     * @param element Element to scope.
     * @param id Unique ID.
     */
    private scopeChildElements;
}
