import Element from '../../nodes/basic/element/Element';
import DocumentFragment from '../../nodes/basic/document-fragment/DocumentFragment';
import IShadowRootRenderOptions from './IShadowRootRenderOptions';
import HTMLRenderResult from '../HTMLRenderResult';
import ShadowRoot from '../../nodes/basic/shadow-root/ShadowRoot';
import IHTMLRenderer from '../IHTMLRenderer';
/**
 * Utility for converting an element to string.
 *
 * @class QuerySelector
 */
export default class ShadowRootRenderer implements IHTMLRenderer {
    private renderOptions;
    private shadowRootScoper;
    /**
     * Renders an element as HTML.
     *
     * @param {IShadowRootRenderOptions} [renderOptions] Render this.renderOptions.
     */
    constructor(renderOptions?: IShadowRootRenderOptions);
    /**
     * Renders an element as HTML.
     *
     * @param {Element} element Element to render.
     * @return {HTMLRenderResult} Result.
     */
    getOuterHTML(element: Element): HTMLRenderResult;
    /**
     * Renders an element as HTML.
     *
     * @param {Element|DocumentFragment|ShadowRoot} element Element to render.
     * @return {HTMLRenderResult} Result.
     */
    getInnerHTML(element: Element | DocumentFragment | ShadowRoot): HTMLRenderResult;
    /**
     * Returns attributes as a string.
     *
     * @param {Element} element Element.
     * @return {string} Attributes.
     */
    private getAttributes;
}
