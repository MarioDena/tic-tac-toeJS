import Element from '../../nodes/basic/element/Element';
import IShadowRootRenderOptions from './IShadowRootRenderOptions';
/**
 * Scopes elements and CSS inside shadow roots.
 */
export default class ShadowRootScoper {
    private renderOptions;
    private scopedCSSCache;
    /**
     * Renders an element as HTML.
     *
     * @param {IShadowRootRenderOptions} renderOptions Render this.renderOptions.
     */
    constructor(renderOptions: IShadowRootRenderOptions);
    /**
     * Clones an element and scopes it.
     *
     * @param {Element} element Element to render.
     * @param {ScopedCSSCache} cssCache Options object.
     * @param {IShadowRootRenderOptions} options Render options.
     * @returns {Element} Element clone.
     */
    getScopedClone(element: Element): Element;
    /**
     * Returns scoped CSS.
     *
     * @returns {string[]} CSS strings.
     */
    getScopedCSS(): string[];
    /**
     * Moves child nodes into shadow root slot elements.
     *
     * @param {Element} element Element.
     */
    private moveChildNodesIntoSlots;
    /**
     * Extracts CSS.
     *
     * @param {Element} element Element.
     */
    private extractAndScopeCSS;
    /**
     * Extracts CSS.
     *
     * @param {ShadowRoot} shadowRoot Shadow root.
     * @return {string} CSS.
     */
    private extractCSS;
    /**
     * Scopes an element by adding a unique id as a class to it and its children.
     *
     * @param {Element|ShadowRoot} element Element to scope.
     * @param {string} id Unique ID.
     */
    private scopeChildElements;
}
