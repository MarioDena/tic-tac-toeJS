"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Element_1 = __importDefault(require("../nodes/basic/element/Element"));
var SelfClosingElements_1 = __importDefault(require("../html-config/SelfClosingElements"));
var UnclosedElements_1 = __importDefault(require("../html-config/UnclosedElements"));
/**
 * Utility for converting an element to string.
 *
 * @class QuerySelector
 */
var HTMLRenderer = /** @class */ (function () {
    function HTMLRenderer() {
    }
    /**
     * Renders an element as HTML.
     *
     * @param element Element to render.
     * @return Result.
     */
    HTMLRenderer.getOuterHTML = function (element) {
        var tagName = element.tagName.toLowerCase();
        if (UnclosedElements_1.default.includes(tagName)) {
            return "<" + tagName + this.getAttributes(element) + ">";
        }
        else if (SelfClosingElements_1.default.includes(tagName)) {
            return "<" + tagName + this.getAttributes(element) + "/>";
        }
        return "<" + tagName + this.getAttributes(element) + ">" + element.innerHTML + "</" + tagName + ">";
    };
    /**
     * Renders an element as HTML.
     *
     * @param element Element to render.
     * @returns Result.
     */
    HTMLRenderer.getInnerHTML = function (element) {
        var renderElement = element.content || element;
        var html = '';
        for (var _i = 0, _a = renderElement.childNodes.slice(); _i < _a.length; _i++) {
            var child = _a[_i];
            if (child instanceof Element_1.default) {
                html += child.outerHTML;
            }
            else {
                html += child.toString();
            }
        }
        return html;
    };
    /**
     * Returns attributes as a string.
     *
     * @param element Element.
     * @return Attributes.
     */
    HTMLRenderer.getAttributes = function (element) {
        var rawAttributes = element._getRawAttributes();
        return rawAttributes ? ' ' + rawAttributes : '';
    };
    return HTMLRenderer;
}());
exports.default = HTMLRenderer;
//# sourceMappingURL=HTMLRenderer.js.map