/**
 * CSS Cache.
 */
export default class ScopedCSSCache {
    private original;
    private scoped;
    /**
     * Returns the scoped CSS.
     *
     * @return {string} Scoped style.
     */
    getAllScopedCSS(): string;
    /**
     * Returns scoped CSS.
     *
     * @param {string} css CSS.
     * @return {string} Cached scoped CSS.
     */
    getScoped(css: string): string;
    /**
     * Returns scope ID.
     *
     * @param {string} css CSS.
     * @return string Scope ID.
     */
    getScopeID(css: string): string;
    /**
     * Returns scoped CSS.
     *
     * @param {string} css CSS.
     * @param {string} scopedCSS Scoped CSS.
     */
    setScoped(css: string, scopedCSS: any): void;
    /**
     * Removes a cache entry.
     *
     * @param {string} css CSS.
     */
    removeScoped(css: string): void;
    /**
     * Clears cache.
     */
    clear(): void;
    /**
     * Returns an unique ID.
     *
     * @param {number} index Index.
     * @return {string} ID.
     */
    getIdByIndex(index: number): string;
}
